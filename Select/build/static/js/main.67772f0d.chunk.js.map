{"version":3,"sources":["components/search-item.js","components/dropdown-menu.js","components/user-options.js","components/app.js","index.js"],"names":["SearchItem","state","searchWord","onSearchChange","event","target","value","setState","props","className","placeholder","this","onChange","Component","DropDownMenu","buttons","name","label","onOptionClick","e","options","onToggleActive","onFilterChange","filter","onMultiple","multipleClass","isMultiple","optionElems","map","item","id","text","classNames","isActive","key","onClick","type","data-toggle","aria-haspopup","aria-expanded","UserOptions","userOptionsData","onDelete","chips","Chip","color","variant","App","newId","optionData","createOption","toggleProperty","stopPropagation","targetOption","classList","contains","toggle","dataArr","prop","index","findIndex","el","oldItem","newItem","slice","items","length","toLowerCase","includes","filterItems","search","root","document","querySelector","ReactDom","render"],"mappings":"6OAEqBA,E,4MAEjBC,MAAQ,CACJC,WAAY,I,EAGhBC,eAAiB,SAACC,GACd,IAAMF,EAAaE,EAAMC,OAAOC,MAChC,EAAKC,SAAS,CAAEL,eAChB,EAAKM,MAAML,eAAeD,I,uDAI1B,OACI,2BAAOO,UAAU,SACbC,YAAY,iBACZJ,MAAQK,KAAKV,MAAMC,WACnBU,SAAWD,KAAKR,qB,GAjBQU,aCCnBC,E,4MAEjBC,QAAU,CACN,CAACC,KAAM,MAAOC,MAAO,OACrB,CAACD,KAAM,SAAUC,MAAO,UACxB,CAACD,KAAM,WAAYC,MAAO,a,EAG9BC,cAAgB,SAACC,GACb,EAAKX,MAAMU,cAAcC,I,uDAGnB,IAAD,EAEkDR,KAAKH,MADpDY,EADH,EACGA,QAASC,EADZ,EACYA,eAAgBlB,EAD5B,EAC4BA,eAC7BmB,EAFC,EAEDA,eAAgBC,EAFf,EAEeA,OAAQC,EAFvB,EAEuBA,WACtBC,GAAgC,IAHjC,EAEmCC,WACO,eAAiB,wBAC1DC,EAAcP,EAAQQ,KAAI,SAACC,GAAU,IAC/BC,EAAuBD,EAAvBC,GAAIC,EAAmBF,EAAnBE,KACRC,EAAa,wBAKjB,OAN+BH,EAAbI,WAIdD,GAAc,aAGd,4BAAQvB,UAAYuB,EACZE,IAAMJ,EACNK,QAAU,kBAAMd,EAAeS,KACjCC,MAKRhB,EAAUJ,KAAKI,QAAQa,KAAI,YAAsB,IAAnBZ,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAEhCe,EADWT,IAAWP,EACE,0BAA4B,iBAC1D,OACI,4BACIP,UAAYuB,EACZE,IAAMlB,EACNmB,QAAU,SAAChB,GAAD,OAAOG,EAAeN,EAAMG,KACrCF,MAKb,OACI,yBAAKR,UAAU,aACX,4BAAQ2B,KAAK,SAAS3B,UAAU,oCAAoC4B,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,SAA9H,YAGA,yBAAK9B,UAAU,gBACX0B,QAAUxB,KAAKO,eACf,kBAAC,EAAD,CAAYf,eAAiBA,IAC7B,yBAAKM,UAAU,yBACTM,EACF,4BACIN,UAAYgB,EACZU,QAAU,SAAChB,GAAD,OAAOK,EAAWL,KAFhC,aAMFQ,Q,GA7DoBd,a,QCArB2B,E,uKAEP,IAAD,EACiC7B,KAAKH,MAAnCiC,EADH,EACGA,gBAAiBC,EADpB,EACoBA,SACrBC,EAAQ,GAkBZ,OAjBIF,IACAE,EAAQF,EAAgBb,KAAI,SAACC,GAAU,IAC3BC,EAAaD,EAAbC,GAAIC,EAASF,EAATE,KAEZ,OACI,wBAAIG,IAAKJ,GACT,kBAACc,EAAA,EAAD,CACI3B,MAAQc,EACRc,MAAM,UACNC,QAAQ,WACRJ,SAAW,kBAAMA,EAASZ,WAQtC,wBAAIrB,UAAU,eACRkC,O,GAxBuB9B,aCEpBkC,G,kNACjBC,MAAQ,E,EAER/C,MAAQ,CACJgD,WAAY,CACR,EAAKC,aAAa,WAClB,EAAKA,aAAa,WAClB,EAAKA,aAAa,WAClB,EAAKA,aAAa,WAClB,EAAKA,aAAa,WAClB,EAAKA,aAAa,WAClB,EAAKA,aAAa,WAClB,EAAKA,aAAa,YAEtBhD,WAAY,GACZqB,OAAQ,MACRG,YAAY,G,EAuBhBL,eAAiB,SAACS,GACd,EAAKvB,UAAS,YAAqB,IAAlB0C,EAAiB,EAAjBA,WACb,MAAO,CACHA,WAAY,EAAKE,eAAerB,EAAImB,EAAY,iB,EAK5DP,SAAW,SAACZ,GACR,EAAKT,eAAeS,I,EAGxB3B,eAAiB,SAACD,GACd,EAAKK,SAAS,CAAEL,gB,EAgBpBoB,eAAiB,SAACC,EAAQJ,GAEtB,OADAA,EAAEiC,kBACK,EAAK7C,SAAS,CAAEgB,Y,EAa3BL,cAAgB,SAACC,GACb,GAAI,EAAKlB,MAAMyB,WAAY,CACvB,IAAM2B,EAAelC,EAAEd,OACvBc,EAAEiC,kBACEC,EAAaC,UAAUC,SAAS,YAChCF,EAAaC,UAAUE,OAAO,c,EAI1ChC,WAAa,SAACL,GACVA,EAAEiC,kBACF,EAAK7C,UAAS,YACV,MAAO,CACHmB,YAF0B,EAAjBA,gB,2DA3ERK,GACT,MAAO,CACHD,GAAInB,KAAKqC,QACTjB,OACAE,UAAU,K,qCAIHH,EAAI2B,EAASC,GACxB,IAAMC,EAAQF,EAAQG,WAAU,SAACC,GAAD,OAAQA,EAAG/B,KAAOA,KAE5CgC,EAAUL,EAAQE,GAClBI,EAAO,2BAAOD,GAAP,IAAgB,CAACJ,IAAQI,EAAQJ,KAC9C,MAAM,GAAN,mBACOD,EAAQO,MAAM,EAAGL,IADxB,CAEII,GAFJ,YAGON,EAAQO,MAAML,EAAM,O,6BAoBxBM,EAAO1C,GACV,OAAOA,GACH,IAAK,MACD,OAAO0C,EACX,IAAK,SACD,OAAOA,EAAM1C,QAAO,SAACM,GAAD,OAAUA,EAAKI,YACvC,IAAK,WACD,OAAOgC,EAAM1C,QAAO,SAACM,GAAD,OAAWA,EAAKI,YACxC,QACI,OAAOgC,K,6BASZA,EAAO/D,GACV,OAA0B,IAAtBA,EAAWgE,OACJD,EAGJA,EAAM1C,QAAO,SAACM,GACjB,OAAOA,EAAKE,KAAKoC,cAAcC,SAASlE,EAAWiE,oB,+BAsBjD,IAAD,EACkDxD,KAAKV,MAApDgD,EADH,EACGA,WAAY/C,EADf,EACeA,WAAYqB,EAD3B,EAC2BA,OAAQG,EADnC,EACmCA,WAClCe,EAAkBQ,EAAW1B,QAAO,SAACM,GAAD,OAAUA,EAAKI,YACnDoC,EAAc1D,KAAKY,OAAOZ,KAAK2D,OAAOrB,EAAY/C,GAAaqB,GAErE,OACI,yBAAKd,UAAU,qBACX,kBAAC,EAAD,CACIW,QAAUiD,EACV9C,OAASA,EACTG,WAAaA,EACbF,WAAab,KAAKa,WAClBH,eAAiBV,KAAKU,eACtBlB,eAAiBQ,KAAKR,eACtBe,cAAgBP,KAAKO,cACrBI,eAAiBX,KAAKW,iBAE1B,kBAAC,EAAD,CACImB,gBAAkBA,EAClBC,SAAW/B,KAAK+B,gB,GAxHH7B,cCD3B0D,EAAOC,SAASC,cAAc,SAEpCC,IAASC,OAAO,kBAAC,EAAD,MAASJ,K","file":"static/js/main.67772f0d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class SearchItem extends Component {\r\n    \r\n    state = {\r\n        searchWord: \"\" \r\n    };\r\n    \r\n    onSearchChange = (event) => {\r\n        const searchWord = event.target.value;\r\n        this.setState({ searchWord });\r\n        this.props.onSearchChange(searchWord);\r\n    } \r\n\r\n    render() {\r\n        return (\r\n            <input className=\"search\" \r\n                placeholder=\"type to search\"\r\n                value={ this.state.searchWord }\r\n                onChange={ this.onSearchChange } \r\n            />\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport SearchItem from \"./search-item\";\r\n\r\nexport default class DropDownMenu extends Component {\r\n\r\n    buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'inactive', label: 'Inactive'}\r\n    ];\r\n\r\n    onOptionClick = (e) => {\r\n        this.props.onOptionClick(e);\r\n    }\r\n    \r\n    render() {\r\n        const { options, onToggleActive, onSearchChange, \r\n            onFilterChange, filter, onMultiple, isMultiple } = this.props;\r\n        const multipleClass = (isMultiple === false) ? \"btn multiple\" : \"btn multiple btn-info\";\r\n        const optionElems = options.map((item) => {\r\n            const { id, text, isActive } = item;\r\n            let classNames = \"options dropdown-item\";\r\n    \r\n            if (isActive)\r\n                classNames += \" isActive\";\r\n    \r\n            return (\r\n                <option className={ classNames } \r\n                        key={ id }\r\n                        onClick={ () => onToggleActive(id) }>\r\n                    { text }\r\n                </option>\r\n            );\r\n        });\r\n\r\n        const buttons = this.buttons.map(({ name, label }) => {\r\n            const isTurnOn = filter === name;\r\n            const classNames = isTurnOn ? 'btn btn-filter btn-info' : 'btn btn-filter';\r\n            return (\r\n                <button \r\n                    className={ classNames }\r\n                    key={ name }\r\n                    onClick={ (e) => onFilterChange(name, e) }>\r\n                    {label}\r\n                </button>  \r\n            );\r\n        });\r\n    \r\n        return (\r\n            <div className=\"btn-group\">\r\n                <button type=\"button\" className=\"btn btn-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    Dropdown\r\n                </button>\r\n                <div className=\"dropdown-menu\"\r\n                    onClick={ this.onOptionClick }>\r\n                    <SearchItem onSearchChange={ onSearchChange }/>\r\n                    <div className=\"btn-group filter-btns\">\r\n                        { buttons }\r\n                        <button \r\n                            className={ multipleClass }\r\n                            onClick={ (e) => onMultiple(e) }>\r\n                            Myltiple\r\n                        </button>\r\n                    </div>\r\n                    { optionElems }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nexport default class UserOptions extends Component {\r\n    \r\n    render() {\r\n        const { userOptionsData, onDelete } = this.props;\r\n        let chips = [];\r\n        if (userOptionsData) {\r\n            chips = userOptionsData.map((item) => {\r\n                const { id, text } = item;\r\n\r\n                return (\r\n                    <li key={id}>\r\n                    <Chip\r\n                        label={ text }\r\n                        color=\"primary\"\r\n                        variant='outlined'\r\n                        onDelete={ () => onDelete(id) }\r\n                    />\r\n                </li>\r\n                );    \r\n            });\r\n        }\r\n\r\n        return (\r\n            <ul className=\"userOptions\">\r\n                { chips }\r\n            </ul>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport DropDownMenu from \"./dropdown-menu\";\r\nimport UserOptions from \"./user-options\";\r\nimport \"./style.css\";\r\n\r\nexport default class App extends Component {\r\n    newId = 0;\r\n\r\n    state = {\r\n        optionData: [\r\n            this.createOption(\"option1\"),\r\n            this.createOption(\"option2\"),\r\n            this.createOption(\"option3\"),\r\n            this.createOption(\"option4\"),\r\n            this.createOption(\"option5\"),\r\n            this.createOption(\"option6\"),\r\n            this.createOption(\"option7\"),\r\n            this.createOption(\"option8\"),\r\n        ],\r\n        searchWord: \"\",\r\n        filter: \"all\",\r\n        isMultiple: false\r\n    }\r\n\r\n    createOption(text) {\r\n        return {\r\n            id: this.newId++,\r\n            text,\r\n            isActive: false\r\n        }; \r\n    }\r\n\r\n    toggleProperty(id, dataArr, prop) {\r\n        const index = dataArr.findIndex((el) => el.id === id);\r\n\r\n        const oldItem = dataArr[index];\r\n        const newItem = {...oldItem, [prop]: !oldItem[prop]};\r\n        return [\r\n            ...dataArr.slice(0, index),\r\n            newItem,\r\n            ...dataArr.slice(index+1)\r\n        ];\r\n    }\r\n\r\n    onToggleActive = (id) => {\r\n        this.setState(({ optionData }) => {\r\n            return {\r\n                optionData: this.toggleProperty(id, optionData, \"isActive\"),\r\n            }\r\n        });\r\n    }\r\n\r\n    onDelete = (id) => {\r\n        this.onToggleActive(id);\r\n    }\r\n\r\n    onSearchChange = (searchWord) => {\r\n        this.setState({ searchWord });\r\n    }\r\n\r\n    filter(items, filter) {\r\n        switch(filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => item.isActive);\r\n            case 'inactive':\r\n                return items.filter((item) => !item.isActive);\r\n            default:\r\n                return items;\r\n        }\r\n    } \r\n\r\n    onFilterChange = (filter, e) => {\r\n        e.stopPropagation();\r\n        return this.setState({ filter })\r\n    }\r\n\r\n    search(items, searchWord) {\r\n        if (searchWord.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.text.toLowerCase().includes(searchWord.toLowerCase());\r\n        })\r\n    }\r\n\r\n    onOptionClick = (e) => {\r\n        if (this.state.isMultiple) {\r\n            const targetOption = e.target; \r\n            e.stopPropagation();\r\n            if (targetOption.classList.contains('.option') )\r\n                targetOption.classList.toggle('isActive');\r\n        }\r\n    }\r\n\r\n    onMultiple = (e) => {\r\n        e.stopPropagation();\r\n        this.setState(({ isMultiple }) => {\r\n            return {\r\n                isMultiple: !isMultiple\r\n            }\r\n        });\r\n    } \r\n\r\n    render() {\r\n        const { optionData, searchWord, filter, isMultiple } = this.state;\r\n        const userOptionsData = optionData.filter((item) => item.isActive);\r\n        const filterItems = this.filter(this.search(optionData, searchWord), filter)\r\n\r\n        return (\r\n            <div className=\"container content\">\r\n                <DropDownMenu \r\n                    options={ filterItems }\r\n                    filter={ filter }\r\n                    isMultiple={ isMultiple }\r\n                    onMultiple={ this.onMultiple }\r\n                    onToggleActive={ this.onToggleActive }\r\n                    onSearchChange={ this.onSearchChange }\r\n                    onOptionClick={ this.onOptionClick }\r\n                    onFilterChange={ this.onFilterChange }\r\n                />\r\n                <UserOptions\r\n                    userOptionsData={ userOptionsData }\r\n                    onDelete={ this.onDelete }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './components/app';\n\nconst root = document.querySelector('#root'); \n\nReactDom.render(<App />, root);"],"sourceRoot":""}